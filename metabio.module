<?php

$GLOBALS['metabio_dataset_fields'] = array(
  'metabio_dataset' => array(
    'name', 'description', 'collector'
  )
);

/**
 * Implements hook_node_info().
 */
function metabio_node_info() {
  return array(
    'metabio' => array(
      'name'        => t('Metabio Dataset'),
      'base'        => 'metabio',
      'module'      => 'metabio',
      'description' => t('Biodiversity metadata entry form for datasets.'),
      'has_body'    => FALSE
    ),
  );
}

// Implementation of hook_menu(): used to create a page for the form
function metabio_menu() {
  $items = array();

  return $items;
}

// Form builder. Form ID = function name
function metabio_form_alter(&$form, &$form_state, $form_id) {
  if($form_id == 'metabio_node_form') {
    $form['metabio_dataset'] = array(
      '#type' => 'fieldset',
      '#title' => t('Overview'),
      '#collapsible' => TRUE,
      '#collapsed' => FALSE,
      '#tree' => TRUE,
    );
    $form['metabio_dataset']['name'] = array(
      '#type' => 'textfield',
      '#title' => t('Dataset name'),
      '#size' => 50,
      '#required' => TRUE,
      '#default_value' => isset($form['#node']->metabio_dataset) ? $form['#node']->metabio_dataset['name'] : ""
    );
    $form['metabio_dataset']['description'] = array(
      '#type' => 'textarea',
      '#title' => t('Dataset description'),
      '#cols' => 50,
      '#rows' => 6,
      '#required' => FALSE,
      '#default_value' => isset($form['#node']->metabio_dataset) ? $form['#node']->metabio_dataset['description'] : ""
    );
    $form['metabio_dataset']['collector'] = array(
      '#type' => 'textfield',
      '#title' => t('Who collected the data?'),
      '#size' => 50,
      '#required' => FALSE,
      '#default_value' => isset($form['#node']->metabio_dataset) ? $form['#node']->metabio_dataset['collector'] : ""
    );
    $form['#validate'][] = 'metabio_form_validate';
    $form['#submit'][] = 'metabio_form_submit';
  }
}

// Form validation handler.
function metabio_form_validate($form, &$form_state) {
  //do validation here if necessary
}


// Form submit handler.
function metabio_form_submit($form, &$form_state) {
  $form_state['values']['title'] = $form_state['values']['metabio_dataset']['name'];
}


function metabio_insert($node) {
  db_insert('metabio_dataset')->fields(array_merge(array('nid' => $node->nid), _metabio_fields($node)))->execute();
}

function metabio_update($node) {
  db_update('metabio_dataset')->fields(_metabio_fields($node))->condition('nid', $node->nid)->execute();
}

function metabio_delete($node) {
  db_delete('metabio_dataset')->condition('nid', $node->nid)->execute();
}

function metabio_load($nodes) {
  $result = db_select('metabio_dataset', 'm')->fields('m')->condition('m.nid', key($nodes))->execute();
  foreach($result as $record) {
    foreach($GLOBALS['metabio_dataset_fields'] as $fieldsets => $fieldset) {
      foreach($fieldset as $field) {
        $nodes[$record->nid]->{$fieldsets}[$field] = $record->{$field};
      }
    }
  }
}

function _metabio_fields($node) {
  $fields = array();
  foreach($GLOBALS['metabio_dataset_fields'] as $fieldsets => $fieldset) {
    foreach($fieldset as $field) {
      $fields[$field] = $node->{$fieldsets}[$field];
    }
  }
  return $fields;
}
