<?php

/**
 * Implements hook_schema().
 */

function metabio_schema() {
  $schema = array();
  $schema['metabio_dataset'] = array(
    'description' => 'The base table for metadata datasets.',
    'fields' => array(
      'mid' => array(
        'description' => 'The primary identifier for a metadata dataset entry.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE),
      'nid' => array(
        'description' => 'The foreign key for the node',
        'type' => 'int',
        'not null' => TRUE),
      'dataset_name' => array(
        'description' => 'The name of the dataset',
        'type' => 'varchar',
        'length' => 255),
      'dataset_description' => array(
        'description' => 'The description of the dataset.',
        'type' => 'text'),
      'tags' => array(
        'description' => 'Dataset tags/keywords',
        'type' => 'text'),
      'data_collector' => array(
        'description' => 'Who collected the data?',
        'type' => 'varchar',
        'length' => 255),
      'data_holder_first_name' => array(
        'description' => 'First name of data holder',
        'type' => 'varchar',
        'length' => 255),
      'data_holder_last_name' => array(
        'description' => 'Last name of data holder',
        'type' => 'varchar',
        'length' => 255),
      'data_holder_institution' => array(
        'description' => 'Institution of data holder',
        'type' => 'varchar',
        'length' => 255),
      'data_holder_email' => array(
        'description' => 'Email of data holder',
        'type' => 'varchar',
        'length' => 255),
      'data_holder_phone' => array(
        'description' => 'Phone of data holder',
        'type' => 'varchar',
        'length' => 255),
      'data_holder_address' => array(
        'description' => 'Address of data holder',
        'type' => 'varchar',
        'length' => 255),
      'other_institutions' => array(
        'description' => 'Other institutions involved in project',
        'type' => 'varchar',
        'length' => 255),
      'funding_sources' => array(
        'description' => 'Funding sources',
        'type' => 'varchar',
        'length' => 255),
      'dataset_format' => array(
        'description' => 'Format of dataset',
        'type' => 'varchar',
        'length' => 255),
      'responsible_person' => array(
        'description' => 'Person responsible for data',
        'type' => 'varchar',
        'length' => 255),
      'additional_comments' => array(
        'description' => 'Any additional comments',
        'type' => 'text'),
      'taxa_studied' => array(
        'description' => 'List of taxa studied',
        'type' => 'varchar',
        'length' => 255),
      'taxonomic_information' => array(
        'description' => 'Taxonomic information (multiple checkboxes)',
        'type' => 'varchar',
        'length' => 255),
      'taxonomic_details' => array(
        'description' => 'All taxonomy goes here. To organize',
        'type' => 'text'),
      'study_design' => array(
        'description' => 'Description of study design',
        'type' => 'text'),
      'study_status' => array(
        'description' => 'Ongoing/Complete',
        'type' => 'varchar',
        'length' => 255),
      'sampling_approaches' => array(
        'description' => 'Multiple checkboxes',
        'type' => 'varchar',
        'length' => 500),
      'sampling_approaches_other' => array(
        'description' => 'Description of "other" sampling approach',
        'type' => 'varchar',
        'length' => 500),
      'study_goals' => array(
        'description' => 'Multiple checkboxes',
        'type' => 'varchar',
        'length' => 500),
      'study_goals_other' => array(
        'description' => 'Other study goals',
        'type' => 'varchar',
        'length' => 500),
      'data_types' => array(
        'description' => 'Multiple checkboxes',
        'type' => 'varchar',
        'length' => 255),
      'data_types_other' => array(
        'description' => 'Other data types',
        'type' => 'varchar',
        'length' => 255),
      'frequency_of_sampling' => array(
        'description' => 'Frequency of sampling',
        'type' => 'varchar',
        'length' => 255),
      'first_year' => array(
        'description' => 'First year',
        'type' => 'int',
        'length' => 4),
      'last_year' => array(
        'description' => 'Last year',
        'type' => 'int',
        'length' => 4),
      'number_of_sites' => array(
        'description' => 'Number of sites',
        'type' => 'varchar',
        'length' => 255),
      'site_description' => array(
        'description' => 'Description of the sites',
        'type' => 'text'),
      'site_habitat' => array(
        'description' => 'Site habitat',
        'type' => 'varchar',
        'length' => 500),
      'site_environment' => array(
        'description' => 'Aquatic/terrestrial/marine/aerial',
        'type' => 'varchar',
        'length' => 255),
      'location_name' => array(
        'description' => 'Name of location',
        'type' => 'varchar',
        'length' => 255),
      'geography' => array(
        'description' => 'Geography of study location',
        'type' => 'text'),
      'publications_types' => array(
        'description' => 'Checkboxes',
        'type' => 'varchar',
        'length' => 255),
      'publications' => array(
        'description' => 'Comma separated list of publications',
        'type' => 'text'),
      'publications_hyperlinks' => array(
        'description' => 'Comma separated list of publication hyperlinks',
        'type' => 'text'),
      'publications_dois' => array(
        'description' => 'Comma separated list of publication DOIs',
        'type' => 'text'),
      'collections' => array(
        'description' => 'Collections information',
        'type' => 'varchar',
        'length' => 255),
      'specimens' => array(
        'description' => 'Specimens',
        'type' => 'varchar',
        'length' => 255),
      'files' => array(
        'description' => 'Comma separated list of file urls',
        'type' => 'text'),
      ),
'indexes' => array(
  'node_dataset' => array('nid')
  ),
'foreign keys' => array(
  'node' => array(
    'table' => 'node',
    'columns' => array('nid' => 'nid'),
    )
  ),
'primary key' => array('mid'),
);
  /*$schema['ITIS_names'] = array(
    'description' => 'The table with ITIS longnames',
    'fields' => array(
      'tsn' => array(
        'description' => 'The unique TSN for that name',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE),
      'latin_name' => array(
        'description' => 'Latin name',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE),
      'english_name' => array(
        'description' => 'English name',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE),     
      'french_name' => array(
        'description' => 'French name',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE),
      ),
);*/
return $schema;
}

/**
 * Implements hook_install().
 */
function flexslider_install() {
/*
  module_load_include('inc', 'taxonomy_csv','import/taxonomy_csv.import.api');
    ini_set("memory_limit","200M");
    $csv_lines = file_get_contents(drupal_get_path('module','metabio').'/ITIS.csv');
      $result = taxonomy_csv_import(
      array(
        'text'             => $csv_lines,
        'update_or_ignore' => 'update',
        'enclosure'        => '"',
        'source_choice'    => 'text',
      ));
*/
}

/**
 * Implements hook_uninstall().
 */
function metabio_uninstall() {
  $results = db_select('node', 'n')->fields('n', array('nid'))->condition('type', 'metabio' ,'=')->execute()->fetchAll();
  foreach($results as $result) {
    node_delete($result->nid);
  }
  db_drop_table('metabio_dataset');
  $vid = db_select('taxonomy_vocabulary', 't')
    -> fields('t', array('vid'))
    -> condition('name','metabio_keywords','=')
    -> execute()
    -> fetchField();
  taxonomy_vocabulary_delete($vid);  
  node_types_rebuild();
  menu_rebuild();
}

function metabio_install(){
  module_load_include('module', 'taxonomy', 'taxonomy');
  $t=get_t();
  $vocabulary = new stdClass();
  $vocabulary->name = 'metabio_keywords';
  $vocabulary->machine_name = 'metabio_keywords';
  taxonomy_vocabulary_save($vocabulary);
  $vid = $vocabulary->vid;
  $term = new stdClass();
  $term->name = 'urban';
  $term->vid = $vid;
  taxonomy_term_save($term);
}


?>